
{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Music BVC Network Stack",
    "Parameters": {
      "VPCCIDR": {
        "Type": "String",
        "Description": "VPC CidrBlock",
        "Default": "172.20.0.0/20"
      },
      "PublicCIDR1": {
        "Type": "String",
        "Description": "Public CidrBlock",
        "Default": "172.20.1.0/24"
      },
      "PublicCIDR2": {
        "Type": "String",
        "Description": "Public CidrBlock",
        "Default": "172.20.2.0/24"
      },
      "PublicCIDR3": {
        "Type": "String",
        "Description": "Public CidrBlock",
        "Default": "172.20.3.0/24"
      },
      "PrivateCIDR1": {
        "Type": "String",
        "Description": "Private CidrBlock",
        "Default": "172.20.4.0/24"
      },
      "PrivateCIDR2": {
        "Type": "String",
        "Description": "Private CidrBlock",
        "Default": "172.20.5.0/24"
      },
      "PrivateCIDR3": {
        "Type": "String",
        "Description": "Private CidrBlock",
        "Default": "172.20.6.0/24"
      },
      "DBCIDR1": {
        "Type": "String",
        "Description": "Private CidrBlock",
        "Default": "172.20.7.0/24"
      },
      "DBCIDR2": {
        "Type": "String",
        "Description": "Private CidrBlock",
        "Default": "172.20.8.0/24"
      },
      "DBCIDR3": {
        "Type": "String",
        "Description": "Private CidrBlock",
        "Default": "172.20.9.0/24"
      },
      "CommonTags": {
        "Type": "String",
        "Description": "Common tag placeholder",
        "Default": "Music"
      },
      "AWSManagedPolicyRoleName": {
        "Default": "AmazonSSMManagedInstanceCore",
        "Type": "String",
        "Description": "AWS Managed Common Policy Name"
      },
      "EnvironmentTagValue": {
        "Type": "String",
        "Default": "Music",
        "Description": "Value of the Environment tag used in conditions (e.g., 'cloudlearn')."
      }
    },
    "Mappings": {},
    "Resources": {
      "VPC": {
        "Type": "AWS::EC2::VPC",
        "Properties": {
          "CidrBlock": {
            "Ref": "VPCCIDR"
          },
          "Tags": [
            {
              "Key": "Application",
              "Value": {
                "Ref": "AWS::StackId"
              }
            },
            {
              "Key": "Network",
              "Value": "Public"
            }
          ]
        }
      },
      "InternetGateway": {
        "Type": "AWS::EC2::InternetGateway",
        "Properties": {
          "Tags": [
            {
              "Key": "Application",
              "Value": {
                "Ref": "AWS::StackId"
              }
            },
            {
              "Key": "Network",
              "Value": "Public"
            }
          ]
        }
      },
      "GatewayToInternet": {
        "Type": "AWS::EC2::VPCGatewayAttachment",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          },
          "InternetGatewayId": {
            "Ref": "InternetGateway"
          }
        }
      },
      "NATGateway": {
        "Type": "AWS::EC2::NatGateway",
        "Properties": {
          "AllocationId": {
            "Fn::GetAtt": [
              "NATGatewayEIP",
              "AllocationId"
            ]
          },
          "SubnetId": {
            "Ref": "PublicSubnet1"
          },
          "Tags": [
            {
              "Key": "stack",
              "Value": "production"
            }
          ]
        }
      },
      "NATGatewayEIP": {
        "Type": "AWS::EC2::EIP",
        "Properties": {
          "Domain": "vpc"
        }
      },
      "PublicSubnet1": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          },
          "AvailabilityZone": {
            "Fn::Select": [
              0,
              {
                "Fn::GetAZs": ""
              }
            ]
          },
          "CidrBlock": {
            "Ref": "PublicCIDR1"
          },
          "Tags": [
            {
              "Key": "Application",
              "Value": {
                "Ref": "AWS::StackId"
              }
            },
            {
              "Key": "Network",
              "Value": "Public"
            }
          ]
        }
      },
      "PublicSubnet2": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          },
          "AvailabilityZone": {
            "Fn::Select": [
              1,
              {
                "Fn::GetAZs": ""
              }
            ]
          },
          "CidrBlock": {
            "Ref": "PublicCIDR2"
          },
          "Tags": [
            {
              "Key": "Application",
              "Value": {
                "Ref": "AWS::StackId"
              }
            },
            {
              "Key": "Network",
              "Value": "Public"
            }
          ]
        }
      },
      "PublicSubnet3": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          },
          "AvailabilityZone": {
            "Fn::Select": [
              2,
              {
                "Fn::GetAZs": ""
              }
            ]
          },
          "CidrBlock": {
            "Ref": "PublicCIDR3"
          },
          "Tags": [
            {
              "Key": "Application",
              "Value": {
                "Ref": "AWS::StackId"
              }
            },
            {
              "Key": "Network",
              "Value": "Public"
            }
          ]
        }
      },
      "PublicRouteTable": {
        "Type": "AWS::EC2::RouteTable",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          },
          "Tags": [
            {
              "Key": "Application",
              "Value": {
                "Ref": "AWS::StackId"
              }
            },
            {
              "Key": "Network",
              "Value": "Public"
            }
          ]
        }
      },
      "PublicRoute": {
        "Type": "AWS::EC2::Route",
        "Properties": {
          "RouteTableId": {
            "Ref": "PublicRouteTable"
          },
          "DestinationCidrBlock": "0.0.0.0/0",
          "GatewayId": {
            "Ref": "InternetGateway"
          }
        }
      },
      "Public1SubnetRouteTableAssociation": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "SubnetId": {
            "Ref": "PublicSubnet1"
          },
          "RouteTableId": {
            "Ref": "PublicRouteTable"
          }
        }
      },
      "Public2SubnetRouteTableAssociation": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "SubnetId": {
            "Ref": "PublicSubnet2"
          },
          "RouteTableId": {
            "Ref": "PublicRouteTable"
          }
        }
      },
      "Public3SubnetRouteTableAssociation": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "SubnetId": {
            "Ref": "PublicSubnet3"
          },
          "RouteTableId": {
            "Ref": "PublicRouteTable"
          }
        }
      },
      "PrivateSubnet1": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          },
          "AvailabilityZone": {
            "Fn::Select": [
              0,
              {
                "Fn::GetAZs": ""
              }
            ]
          },
          "CidrBlock": {
            "Ref": "PrivateCIDR1"
          },
          "Tags": [
            {
              "Key": "Application",
              "Value": {
                "Ref": "AWS::StackId"
              }
            },
            {
              "Key": "Network",
              "Value": "Private"
            }
          ]
        }
      },
      "PrivateSubnet2": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          },
          "AvailabilityZone": {
            "Fn::Select": [
              1,
              {
                "Fn::GetAZs": ""
              }
            ]
          },
          "CidrBlock": {
            "Ref": "PrivateCIDR2"
          },
          "Tags": [
            {
              "Key": "Application",
              "Value": {
                "Ref": "AWS::StackId"
              }
            },
            {
              "Key": "Network",
              "Value": "Private"
            }
          ]
        }
      },
      "PrivateSubnet3": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          },
          "AvailabilityZone": {
            "Fn::Select": [
              2,
              {
                "Fn::GetAZs": ""
              }
            ]
          },
          "CidrBlock": {
            "Ref": "PrivateCIDR3"
          },
          "Tags": [
            {
              "Key": "Application",
              "Value": {
                "Ref": "AWS::StackId"
              }
            },
            {
              "Key": "Network",
              "Value": "Private"
            }
          ]
        }
      },
      "PrivateRouteTable": {
        "Type": "AWS::EC2::RouteTable",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          },
          "Tags": [
            {
              "Key": "Application",
              "Value": {
                "Ref": "AWS::StackId"
              }
            },
            {
              "Key": "Network",
              "Value": "Private"
            }
          ]
        }
      },
      "PrivateRoute": {
        "Type": "AWS::EC2::Route",
        "Properties": {
          "RouteTableId": {
            "Ref": "PrivateRouteTable"
          },
          "DestinationCidrBlock": "0.0.0.0/0",
          "NatGatewayId": {
            "Ref": "NATGateway"
          }
        }
      },
      "Private1SubnetRouteTableAssociation": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "SubnetId": {
            "Ref": "PrivateSubnet1"
          },
          "RouteTableId": {
            "Ref": "PrivateRouteTable"
          }
        }
      },
      "Private2SubnetRouteTableAssociation": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "SubnetId": {
            "Ref": "PrivateSubnet2"
          },
          "RouteTableId": {
            "Ref": "PrivateRouteTable"
          }
        }
      },
      "Private3SubnetRouteTableAssociation": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "SubnetId": {
            "Ref": "PrivateSubnet3"
          },
          "RouteTableId": {
            "Ref": "PrivateRouteTable"
          }
        }
      },
      "DBSubnet1": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          },
          "AvailabilityZone": {
            "Fn::Select": [
              0,
              {
                "Fn::GetAZs": ""
              }
            ]
          },
          "CidrBlock": {
            "Ref": "DBCIDR1"
          },
          "Tags": [
            {
              "Key": "Application",
              "Value": {
                "Ref": "AWS::StackId"
              }
            },
            {
              "Key": "Network",
              "Value": "Public"
            }
          ]
        }
      },
      "DBSubnet2": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          },
          "AvailabilityZone": {
            "Fn::Select": [
              1,
              {
                "Fn::GetAZs": ""
              }
            ]
          },
          "CidrBlock": {
            "Ref": "DBCIDR2"
          },
          "Tags": [
            {
              "Key": "Application",
              "Value": {
                "Ref": "AWS::StackId"
              }
            },
            {
              "Key": "Network",
              "Value": "Public"
            }
          ]
        }
      },
      "DBSubnet3": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          },
          "AvailabilityZone": {
            "Fn::Select": [
              2,
              {
                "Fn::GetAZs": ""
              }
            ]
          },
          "CidrBlock": {
            "Ref": "DBCIDR3"
          },
          "Tags": [
            {
              "Key": "Application",
              "Value": {
                "Ref": "AWS::StackId"
              }
            },
            {
              "Key": "Network",
              "Value": "Public"
            }
          ]
        }
      },
      "DBRouteTable": {
        "Type": "AWS::EC2::RouteTable",
        "Properties": {
          "VpcId": {
            "Ref": "VPC"
          },
          "Tags": [
            {
              "Key": "Application",
              "Value": {
                "Ref": "AWS::StackId"
              }
            },
            {
              "Key": "Network",
              "Value": "Private"
            }
          ]
        }
      },
      "DB1SubnetRouteTableAssociation": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "SubnetId": {
            "Ref": "DBSubnet1"
          },
          "RouteTableId": {
            "Ref": "DBRouteTable"
          }
        }
      },
      "DB2SubnetRouteTableAssociation": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "SubnetId": {
            "Ref": "DBSubnet2"
          },
          "RouteTableId": {
            "Ref": "DBRouteTable"
          }
        }
      },
      "DB3SubnetRouteTableAssociation": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "SubnetId": {
            "Ref": "DBSubnet3"
          },
          "RouteTableId": {
            "Ref": "DBRouteTable"
          }
        }
      },
      "DBRoute": {
        "Type": "AWS::EC2::Route",
        "Properties": {
          "RouteTableId": {
            "Ref": "DBRouteTable"
          },
          "DestinationCidrBlock": "0.0.0.0/0",
          "NatGatewayId": {
            "Ref": "NATGateway"
          }
        }
      },
      "myDBSubnetGroup": {
        "Type": "AWS::RDS::DBSubnetGroup",
        "Properties": {
          "DBSubnetGroupDescription": "Description of subnet group",
          "SubnetIds": [
            {
              "Ref": "DBSubnet1"
            },
            {
              "Ref": "DBSubnet2"
            },
            {
              "Ref": "DBSubnet3"
            }
          ],
          "Tags": [
            {
              "Key": "mykey",
              "Value": "myvalue"
            }
          ]
        }
      },


      "WebServerIAMRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Service": [
                    "ec2.amazonaws.com"
                  ]
                },
                "Action": [
                  "sts:AssumeRole"
                ]
              }
            ]
          },
          "Path": "/",
          "ManagedPolicyArns": [
            {
              "Fn::Join": [
                "",
                [
                  "arn:aws:iam::aws:policy/",
                  {
                    "Ref": "AWSManagedPolicyRoleName"
                  }
                ]
              ]
            }
          ],
          "RoleName": "WebServerIAMRole"
        }
      },
      "AppServerIAMRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Service": [
                    "ec2.amazonaws.com"
                  ]
                },
                "Action": [
                  "sts:AssumeRole"
                ]
              }
            ]
          },
          "Path": "/",
          "ManagedPolicyArns": [
            {
              "Fn::Join": [
                "",
                [
                  "arn:aws:iam::aws:policy/",
                  {
                    "Ref": "AWSManagedPolicyRoleName"
                  }
                ]
              ]
            }
          ],
          "RoleName": "AppServerIAMRole"
        }
      }
    },
    "Outputs": {
      "VPCs": {
        "Description": "A reference to the created VPC",
        "Value": {
          "Ref": "VPC"
        }
      },
      "PublicSubnets": {
        "Description": "A list of the public subnets",
        "Value": {
          "Fn::Join": [
            ",",
            [
              {
                "Ref": "PublicSubnet1"
              },
              {
                "Ref": "PublicSubnet2"
              },
              {
                "Ref": "PublicSubnet3"
              }
            ]
          ]
        }
      },
      "PrivateSubnets": {
        "Description": "A list of the private subnets",
        "Value": {
          "Fn::Join": [
            ",",
            [
              {
                "Ref": "PrivateSubnet1"
              },
              {
                "Ref": "PrivateSubnet2"
              },
              {
                "Ref": "PrivateSubnet3"
              }
            ]
          ]
        }
      },
      "PublicSubnet1": {
        "Description": "A reference to the public subnet in the 1st Availability Zone",
        "Value": {
          "Ref": "PublicSubnet1"
        }
      },
      "PublicSubnet2": {
        "Description": "A reference to the public subnet in the 2nd Availability Zone",
        "Value": {
          "Ref": "PublicSubnet2"
        }
      },
      "PublicSubnet3": {
        "Description": "A reference to the public subnet in the 3rd Availability Zone",
        "Value": {
          "Ref": "PublicSubnet3"
        }
      },
      "PrivateSubnet1": {
        "Description": "A reference to the private subnet in the 1st Availability Zone",
        "Value": {
          "Ref": "PrivateSubnet1"
        }
      },
      "PrivateSubnet2": {
        "Description": "A reference to the private subnet in the 2nd Availability Zone",
        "Value": {
          "Ref": "PrivateSubnet2"
        }
      },
      "PrivateSubnet3": {
        "Description": "A reference to the private subnet in the 3rd Availability Zone",
        "Value": {
          "Ref": "PrivateSubnet3"
        }
      }
    }
  }
  